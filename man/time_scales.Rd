% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale-aaaaa.R, R/scale-days.R, R/scale-hours.R,
%   R/scale-seconds.R
\name{time_scales}
\alias{time_scales}
\alias{scale_x_days}
\alias{scale_x_hours}
\alias{scale_x_seconds}
\title{Scales for durations}
\usage{
scale_x_days(name = "Time (day)", breaks = waiver(),
  minor_breaks = waiver(), labels = waiver(), limits = NULL,
  expand = waiver(), oob = scales::censor, na.value = NA_real_,
  position = "bottom", time_wrap = NULL)

scale_x_hours(name = "Time (h)", breaks = waiver(),
  minor_breaks = waiver(), labels = waiver(), limits = NULL,
  expand = waiver(), oob = scales::censor, na.value = NA_real_,
  position = "bottom", time_wrap = NULL)

scale_x_seconds(name = "Time (s)", breaks = waiver(),
  minor_breaks = waiver(), labels = waiver(), limits = NULL,
  expand = waiver(), oob = scales::censor, na.value = NA_real_,
  position = "bottom", time_wrap = NULL)
}
\arguments{
\item{name}{The name of the scale. Used as axis or legend title. If
\code{NULL}, the default, the name of the scale is taken from the first
mapping used for that aesthetic.}

\item{breaks}{One of: \itemize{
  \item \code{NULL} for no breaks
  \item \code{waiver()} for the default breaks computed by the
    transformation object
  \item A numeric vector of positions
  \item A function that takes the limits as input and returns breaks
    as output
}}

\item{minor_breaks}{One of: \itemize{
  \item \code{NULL} for no minor breaks
  \item \code{waiver()} for the default breaks (one minor break between
    each major break)
  \item A numeric vector of positions
  \item A function that given the limits returns a vector of minor breaks.
}}

\item{labels}{One of: \itemize{
  \item \code{NULL} for no labels
  \item \code{waiver()} for the default labels computed by the
    transformation object
  \item A character vector giving labels (must be same length as \code{breaks})
  \item A function that takes the breaks as input and returns labels
    as output
}}

\item{limits}{A numeric vector of length two providing limits of the scale.
Use \code{NA} to refer to the existing minimum or maximum.}

\item{expand}{A numeric vector of length two giving multiplicative and
additive expansion constants. These constants ensure that the data is
placed some distance away from the axes. The defaults are
\code{c(0.05, 0)} for continuous variables, and \code{c(0, 0.6)} for
discrete variables.}

\item{oob}{Function that handles limits outside of the scale limits
(out of bounds). The default replaces out of bounds values with NA.}

\item{na.value}{Missing values will be replaced with this value.}

\item{position}{The position of the axis. "left" or "right" for vertical
scales, "top" or "bottom" for horizontal scales}

\item{time_wrap}{duration (in seconds) used to wrap the lanbels of the time axis.}
}
\description{
Scales used to represent behaviour durations
}
\details{
\code{time_wrap} is useful when for instance wanting to express time within a day (ZT).
}
\examples{
# we generate some data
metadata <- data.frame(id = sprintf("toy_experiment | \%02d", 1:20),
                   condition=c("A","B"))
dt <- toy_activity_data(metadata,3)
# then, a simple plot
pl <-  ggetho(dt, aes(y=asleep)) + stat_pop_etho()
pl + scale_x_hours(breaks = days(c(1, 2)))
pl + scale_x_hours()
pl + scale_x_days(breaks = days(c(1, 2)))
 pl + scale_x_days()
# on a shorter time scale
pl <-  ggetho(dt[t < hours(5)], aes(z=asleep)) + stat_tile_etho()
pl + scale_x_hours()
pl + scale_x_hours(breaks = hours(1:4))
pl + scale_x_seconds(breaks = hours(1:4))

# time wraping
pl <-  ggetho(dt[t < days(2)], aes(y=asleep)) + stat_pop_etho()
pl + scale_x_hours(time_wrap = hours(24))
}
